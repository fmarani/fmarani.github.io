<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>grpc on Blog | Federico Marani</title>
    <link>/tags/grpc/</link>
    <description>Recent content in grpc on Blog | Federico Marani</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Tue, 16 Jan 2018 15:41:15 +0000</lastBuildDate>
    
	<atom:link href="/tags/grpc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using GRPC with Django</title>
      <link>/blog/using-grpc-with-django/</link>
      <pubDate>Tue, 16 Jan 2018 15:41:15 +0000</pubDate>
      
      <guid>/blog/using-grpc-with-django/</guid>
      <description>GRPC is an implementation of an RPC system, created by Google and Square, that leverages the low-level features of HTTP/2. It has many interesting properties, like bi-directionality, efficiency, and support from many languages. RPC interfaces are declared in a special &amp;ldquo;proto&amp;rdquo; file in a readable way, which makes it, in part, self-documenting. These proto files are then used to generate client and server stubs, which is very convenient.
GRPC is a good choice for internal and performance-sensitive APIs.</description>
    </item>
    
  </channel>
</rss>