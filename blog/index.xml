<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Blog | Federico Marani</title>
    <link>/blog/</link>
    <description>Recent content in Blogs on Blog | Federico Marani</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Wed, 06 Feb 2019 15:41:15 +0000</lastBuildDate>
    
	<atom:link href="/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Notes about book I have read (2018)</title>
      <link>/blog/2018-book-notes/</link>
      <pubDate>Wed, 06 Feb 2019 15:41:15 +0000</pubDate>
      
      <guid>/blog/2018-book-notes/</guid>
      <description>Some notes about the book I read in 2018. These notes are mostly for my future self. Book are presented in order of &amp;ldquo;impact&amp;rdquo;, which is a completely personal metric.
4-hour body week (Tim Ferris) Full of very useful, body-related advice. My biggest takeaway from this is that i experimented for a couple of months the low-carb diet he suggested, and i have never been this slim before. I always wrongly assumed that my weight must be genetic, given how much sport I do.</description>
    </item>
    
    <item>
      <title>Book: Practical Django 2 and Channel 2</title>
      <link>/blog/practical-django2/</link>
      <pubDate>Fri, 28 Dec 2018 15:41:15 +0000</pubDate>
      
      <guid>/blog/practical-django2/</guid>
      <description>This year I had the chance to finally write a book. This took me most of my free time between March and October of this year. Writing this book was very hard: it required discipline and structure. The good thing for me is that I like writing and I like having clarity of mind, and this was an exercise in both.
The book is on Amazon
Please let me know if you have any question, feedback or if you simply enjoyed it.</description>
    </item>
    
    <item>
      <title>Using GRPC with Django</title>
      <link>/blog/using-grpc-with-django/</link>
      <pubDate>Tue, 16 Jan 2018 15:41:15 +0000</pubDate>
      
      <guid>/blog/using-grpc-with-django/</guid>
      <description>GRPC is an implementation of an RPC system, created by Google and Square, that leverages the low-level features of HTTP/2. It has many interesting properties, like bi-directionality, efficiency, and support from many languages. RPC interfaces are declared in a special &amp;ldquo;proto&amp;rdquo; file in a readable way, which makes it, in part, self-documenting. These proto files are then used to generate client and server stubs, which is very convenient.
GRPC is a good choice for internal and performance-sensitive APIs.</description>
    </item>
    
    <item>
      <title>Feeding data to Redshift with Airflow (Europython 2017)</title>
      <link>/blog/feeding-data-to-redshift-with-airflow-presentation/</link>
      <pubDate>Thu, 20 Jul 2017 12:00:00 +0000</pubDate>
      
      <guid>/blog/feeding-data-to-redshift-with-airflow-presentation/</guid>
      <description>The presentation I gave at Europython 2017 in Rimini. The talk is divided in 3 parts: some guiding principles on architecting data pipelines, an introduction to Apache Airflow and the last part is about specifically working with Amazon Redshift. The experience in these tools comes from building an analytics engine for meetups, where historical reports, trend analysis and data enrichment are critical factors.
 And also the video of the presentation:</description>
    </item>
    
    <item>
      <title>Moving data in bulk in and out of Postgresql</title>
      <link>/blog/moving-data-in-and-out-of-postgresql/</link>
      <pubDate>Sun, 18 Jun 2017 14:44:35 +0100</pubDate>
      
      <guid>/blog/moving-data-in-and-out-of-postgresql/</guid>
      <description>Postgresql is a database, and its primary goal is to be efficient when storing and querying information that is stored on disk. Same primary goal of many other databases, with the minor exception of in-memory databases. Postgresql however is a very flexible and extensible system, and in the last few years a lot of extensions came out, one of which is Foreign Data Wrappers.
With Postgres foreign data wrappers, it is very easy to move data in and out of it from other databases.</description>
    </item>
    
    <item>
      <title>How Apache Airflow works</title>
      <link>/blog/how-apache-airflow-works/</link>
      <pubDate>Wed, 31 May 2017 10:17:15 +0100</pubDate>
      
      <guid>/blog/how-apache-airflow-works/</guid>
      <description>(continuing from a previous article)
Scheduler Airflow is made up of mainly two components: webserver and scheduler. The webserver is the main way to interact with Airflow, although some commands can be issued from the command line, such as setting variables or connection credentials. The scheduler is the component that is in charge of executing whatever needs to be executed at a specific time and using a configurable strategy.</description>
    </item>
    
    <item>
      <title>Introduction to Apache Airflow</title>
      <link>/blog/intro-to-apache-airflow/</link>
      <pubDate>Tue, 16 May 2017 10:17:15 +0100</pubDate>
      
      <guid>/blog/intro-to-apache-airflow/</guid>
      <description>Background Apache Airflow is a tool to work with complex and recurring workflows. Workflows is a more formal term to describe scripts like cronjobs. Scripts constitute of a series of tasks, sometimes with retry mechanism attached to it.
A tool like this is used in data-intensive environments with background jobs that need to run everyday. These background scripts do extraction, enrichment and other transformations to a dataset. Most workflow software gives you a structure to use when writing your scripts, so they are able to distinguish between steps and manage their interdependencies.</description>
    </item>
    
    <item>
      <title>Minimalism is how startups keep the focus</title>
      <link>/blog/minimalism-is-how-startups-keep-focus/</link>
      <pubDate>Sat, 18 Mar 2017 16:30:28 +0000</pubDate>
      
      <guid>/blog/minimalism-is-how-startups-keep-focus/</guid>
      <description>I want to blog about this topic because minimalism, meant as the art of doing only the essential, is a very hard thing to do. Writing about things helps me with having a clear mind. I will therefore try to write about it, and rewrite about it in the future as many times as my thinking clears up.
I realize this article will leave you with a ton of space for interpretation.</description>
    </item>
    
    <item>
      <title>A Python microservice stack</title>
      <link>/blog/a-python-microservice-stack/</link>
      <pubDate>Sat, 24 Sep 2016 23:16:56 +0200</pubDate>
      
      <guid>/blog/a-python-microservice-stack/</guid>
      <description>First of all, let me say the word &amp;ldquo;microservice&amp;rdquo; is incredibly inflated these days, but some of the original reasons to use them still hold true. Part of its definition comes from SOA, with some added considerations:
 Services roughly map to business functions Services are autonomous (shared nothing architecture) Boundaries are explicit Services declare schemas and interfaces Company policy defines version compatibility Services are deployed separately Services are manageable by different teams Service unavailability is handled gracefully Service call stack is broad rather than deep  Recently I worked with a company that needed to scale product/engineering to 50+ people, which makes the investment towards this methodology justifiable.</description>
    </item>
    
    <item>
      <title>Do not use HTTPS and basic auth</title>
      <link>/blog/do-not-use-https-and-basic-auth/</link>
      <pubDate>Thu, 15 Sep 2016 12:23:07 +0200</pubDate>
      
      <guid>/blog/do-not-use-https-and-basic-auth/</guid>
      <description>Security is a difficult topic, the discipline is very &amp;ldquo;deep&amp;rdquo;, therefore it is easy to make mistakes if you do not dig deep enough. Unfortunately many people misjudge perceived security with real security, on the basis of &amp;ldquo;it makes sense&amp;rdquo;.
HTTPS is a wonderful protocol, it gives you encryption therefore you cannot see what is going on at L7 (urls, http headers, http verbs, app data). This level of obscurity may be enough for simple apps.</description>
    </item>
    
    <item>
      <title>Rebuilding my site with Hugo (and IPFS)</title>
      <link>/blog/hugo-and-ipfs/</link>
      <pubDate>Wed, 14 Sep 2016 17:04:43 +0200</pubDate>
      
      <guid>/blog/hugo-and-ipfs/</guid>
      <description>Hugo This site was built using Django and, given the very simple content model that it had (and almost never changed), I decided to rebuild it in Hugo. I also was getting fed up of mantaining yet another dynamic site, along with runtime and databases. I picked Hugo because it is written in Go, therefore very easy to get going (one file to install) and it works on any platform.</description>
    </item>
    
    <item>
      <title>YCombinator interview</title>
      <link>/blog/yc-interview/</link>
      <pubDate>Sun, 01 May 2016 20:43:48 +0000</pubDate>
      
      <guid>/blog/yc-interview/</guid>
      <description>A month ago me and my co-founder did an application for YC, and last week we were lucky enough to be selected for an interview, along with other startups. We got called all the way to California with not even a week of notice, everything paid&amp;hellip; definitely a bit more serious than a phone call.
We prepared a lot during the last few days, reading what people say online, meeting previous YC companies, doing mock interviews with YC alumni.</description>
    </item>
    
    <item>
      <title>Assessing quality by functionality mapping</title>
      <link>/blog/assessing-software-quality/</link>
      <pubDate>Sun, 15 Nov 2015 12:00:00 +0000</pubDate>
      
      <guid>/blog/assessing-software-quality/</guid>
      <description>This post is about measuring how the technology supports your current product, that being a single marketable entity. If we accept that the definition of quality is having as less bugs as possible, and the more code you write the more bugs you insert, you will have to accept the fact that the more code you write the less quality you will be able to get out of it. A good software project has the right amount of code to support the features that your product strategy dictates.</description>
    </item>
    
    <item>
      <title>Another failure, another lesson - comprotempo.it</title>
      <link>/blog/comprotempo/</link>
      <pubDate>Wed, 11 Mar 2015 12:00:00 +0000</pubDate>
      
      <guid>/blog/comprotempo/</guid>
      <description>When it came out, I was fashinated by TaskRabbit. I thought that a generic marketplace for handymen was the perfect tool for this decade. We have lots of young unemployment in Italy and there were also middle-class people willing to pay for someone doing chores for them. The idea was simple: putting both sides in touch by agreeing location, type of task and price. The advantages for handymen were money for work, the advantages for the committant is to &amp;ldquo;buy&amp;rdquo; someone else&amp;rsquo;s time (hence the &amp;ldquo;comprotempo&amp;rdquo; name)</description>
    </item>
    
    <item>
      <title>Monitoring servers with Munin</title>
      <link>/blog/monitoring-with-munin/</link>
      <pubDate>Fri, 16 Jan 2015 12:51:25 +0000</pubDate>
      
      <guid>/blog/monitoring-with-munin/</guid>
      <description>I normally use Munin for server monitoring, it is very easy to install and the kind of tool with not much setup. It may not be the best tool when you have many servers, due to static graph generation. Munin 2, released recently, has a few changes in that regard, they might have improved that.
Munin is mainly a resource usage graph tool, which monitors many metrics from a pool of servers (called nodes).</description>
    </item>
    
    <item>
      <title>Working with caches and Memcache</title>
      <link>/blog/working-with-memcache/</link>
      <pubDate>Wed, 14 Jan 2015 11:45:46 +0000</pubDate>
      
      <guid>/blog/working-with-memcache/</guid>
      <description>The traditional use of Memcache is to cache things like computations that take some time or result coming from external system with limited throughput. Examples of these may be database queries (sometimes long to compute), search queries coming from dedicated search services or simply feeds from other sites that don&amp;rsquo;t change often.
Memcache is both a cache system and a separate component in your system architecture, so it is very important to understand the implications.</description>
    </item>
    
    <item>
      <title>Scaling with Ansible (Europython 2014)</title>
      <link>/blog/scaling-with-ansible/</link>
      <pubDate>Sun, 27 Jul 2014 12:00:00 +0000</pubDate>
      
      <guid>/blog/scaling-with-ansible/</guid>
      <description>The presentation I gave at Europython 2014 in Berlin. Again it is about how TrialReach uses Ansible to manage its own infrastructure and some tips and tricks about our use of Ansible.
 And also the video of the presentation:
 </description>
    </item>
    
    <item>
      <title>Give everyone one (public) VM</title>
      <link>/blog/give-everyone-one-vm/</link>
      <pubDate>Tue, 11 Feb 2014 22:45:08 +0000</pubDate>
      
      <guid>/blog/give-everyone-one-vm/</guid>
      <description>At TrialReach we want to be always able to deploy clean versions of our code online. This allows us to show our work more quickly internally (and externally) and get feedback from people as early as possible, without having to wait release dates. This also give us the opportunity to test more frequently our server provisioning procedures, and having the ability to push something live anytime is a really empowering feeling.</description>
    </item>
    
    <item>
      <title>Why my first startup failed - tabs.to</title>
      <link>/blog/why-my-first-startup-failed/</link>
      <pubDate>Sun, 26 Jan 2014 15:24:59 +0000</pubDate>
      
      <guid>/blog/why-my-first-startup-failed/</guid>
      <description>Tabs.to was a url shortener, but with a twist, it could support multiple urls and it was displaying them with a sort of tabbed interface which you could use to switch between pages. The use case I was seeing was sending multiple links via twitter, and by doing so you would have saved space. In hindsight, it seems pretty short-sighted but that was the problem I had. This was in 2010, 4 years ago.</description>
    </item>
    
    <item>
      <title>DevOps with Ansible presentation</title>
      <link>/blog/devops-with-ansible-presentation/</link>
      <pubDate>Mon, 02 Dec 2013 13:13:47 +0000</pubDate>
      
      <guid>/blog/devops-with-ansible-presentation/</guid>
      <description>Presentation I gave at DJUGL in September 2013 about how TrialReach uses Ansible to automate server provisioning.
 </description>
    </item>
    
    <item>
      <title>Spatial search on multiple points in Solr</title>
      <link>/blog/spatial-search-on-multiple-points-in-solr/</link>
      <pubDate>Wed, 31 Jul 2013 12:09:43 +0000</pubDate>
      
      <guid>/blog/spatial-search-on-multiple-points-in-solr/</guid>
      <description>At TrialReach we deal with clinical trials data, which contain a lot of spatial information. Tipically, clinical trials treat a certain set of conditions and they happen in various locations globally. If you are a patient then searching across clinical trials becomes really spatial sensitive: you are only interested in the closest location to you.
This case might apply to other events as well, but the key point is global distribution.</description>
    </item>
    
    <item>
      <title>Transifex for your Django projects</title>
      <link>/blog/transifex-for-your-django-projects/</link>
      <pubDate>Thu, 31 Jan 2013 15:39:37 +0000</pubDate>
      
      <guid>/blog/transifex-for-your-django-projects/</guid>
      <description>I am assuming you already created a project on Transifex (in this example is TxProject), either on the hosted version or on the downloadable version, and all the users you need are on there (just one to start is enough). I am also assuming i18n is already setup and you have at least 2 languages already in your project.
The aim of integrating Transifex libraries into your code is to make it really easy to push/pull translations of a project to their web front-end.</description>
    </item>
    
    <item>
      <title>Technology behind tools.seogadget.co.uk</title>
      <link>/blog/technology-behind-toolsseogadgetcouk/</link>
      <pubDate>Sun, 25 Nov 2012 17:30:21 +0000</pubDate>
      
      <guid>/blog/technology-behind-toolsseogadgetcouk/</guid>
      <description>Scalability was one of the primary concerns when we started building the tool. Essentially, the tool gathers numbers about links you post, it is quite straightforward. To gather these numbers, our tool uses many external APIs and in a way acts as a sort of proxy between the user and many other 3rd party API providers, on top of which some internal indicators are derived. Many tools allow you to do that, but, regarding scalability, some ways are better than others.</description>
    </item>
    
    <item>
      <title>Basic things to do and not in Django</title>
      <link>/blog/basic-things-to-do-and-not-in-django/</link>
      <pubDate>Sun, 23 Sep 2012 19:33:30 +0000</pubDate>
      
      <guid>/blog/basic-things-to-do-and-not-in-django/</guid>
      <description>Make software dependent on absolute paths: One of the projects i was working on had all module imports including the project main folder name. That in turn made impossible to have the same project installed 2 times in the same folder with 2 distinct names. (e.g. 2 versions of the staging site). Sometime is even worse than this, when you have a full path in the code. These should always be in configuration files which are changeable at deployment.</description>
    </item>
    
    <item>
      <title>From idea to a product</title>
      <link>/blog/from-idea-to-a-product/</link>
      <pubDate>Thu, 17 May 2012 00:28:34 +0000</pubDate>
      
      <guid>/blog/from-idea-to-a-product/</guid>
      <description>This is my history in one of the first startups I worked for, very small, but nevertheless a very good learning experience.
Selling the idea We had the vision, and we sold our vision in the way a lean startup would do: sell the vision, receive funding for the project, deliver the product. Turns out it is extremely hard to sell something that does not exist, but we did it.</description>
    </item>
    
    <item>
      <title>Ubuntu on EC2, the simple way.</title>
      <link>/blog/ubuntu-on-ec2-the-simple-way/</link>
      <pubDate>Sun, 06 May 2012 11:39:37 +0000</pubDate>
      
      <guid>/blog/ubuntu-on-ec2-the-simple-way/</guid>
      <description>Problem Sometime ago I had to run a statistical software on some data, the computation was really expensive, it was impractical to run it on my small laptop as it would hung for hours waiting for a result to come up. I thought about running it on Amazon.
Solution Amazon EC2 is a virtual machine hosting service, also known as IaaS. Quite similar to Linode or Rackspace. Payment here is per hour, differently from Linode&amp;hellip; slightly on the expensive side i might add, but top-end VMs are quite powerful.</description>
    </item>
    
    <item>
      <title>Text classification in Python</title>
      <link>/blog/text-classification-in-python/</link>
      <pubDate>Wed, 21 Mar 2012 22:44:23 +0000</pubDate>
      
      <guid>/blog/text-classification-in-python/</guid>
      <description>Python and NLTK form quite a good platform to do text analysis. There is a lot of information on Internet, nevertheless i have not found a clean and simple example of a classifier. Text classifiers come from techniques such as Natural Language Processing and Machine Learning, in fact i think they are exactly in the middle of these.
Bearing in mind that building a good classifier is only possible when you have a training set that represents reality quite well, and certainly longer than the one in this example, here a first stab at it:</description>
    </item>
    
    <item>
      <title>Why SOA in a startup sucks</title>
      <link>/blog/why-soa-in-a-startup-sucks/</link>
      <pubDate>Sun, 22 Jan 2012 21:49:33 +0000</pubDate>
      
      <guid>/blog/why-soa-in-a-startup-sucks/</guid>
      <description>Service Oriented Architectures as i intend are architectures where each component is deployable and usable separately from others. Take as example Amazon, much of their software stack is offered as a service, mainly through an HTTP interface, and marketed as SaaS.
There are tons of reasons why you would want to think to your system as a series of components deployable separately&amp;hellip; flexibility, being able to choose the right tools for each component, etc.</description>
    </item>
    
    <item>
      <title>Passion and Pragmatism in IT</title>
      <link>/blog/passion-and-pragmatism-in-it/</link>
      <pubDate>Thu, 03 Nov 2011 14:49:36 +0000</pubDate>
      
      <guid>/blog/passion-and-pragmatism-in-it/</guid>
      <description>Do what you love is what, for instance, Steve Jobs said. It does not get more true than that. Hacking has been labeled as a negative word, but for me has a positive meaning, which is the impulse of people to open things, learn how they work and change it to make it better. Hacking for me is a passion, something I always do with pleasure.
Having this attitude in IT is important, only experimenting with stuff pushes your skills forward.</description>
    </item>
    
    <item>
      <title>Logging</title>
      <link>/blog/logging/</link>
      <pubDate>Fri, 08 Apr 2011 01:00:10 +0000</pubDate>
      
      <guid>/blog/logging/</guid>
      <description>I work on e-commerce platforms, logging is a critical component in this area. Learn how to do it correctly will allow you and everybody else to save time when problems happen. Sometimes it is not just about saving time, but also being able to give correct answers to customers when things go wrong. When interacting with third parties, logging is even more important, because it allows you to understand where the problem lies, in your code or in the external service.</description>
    </item>
    
    <item>
      <title>How small websites become big</title>
      <link>/blog/how-small-websites-become-big/</link>
      <pubDate>Wed, 30 Mar 2011 00:42:56 +0000</pubDate>
      
      <guid>/blog/how-small-websites-become-big/</guid>
      <description>There is no secret recipe, there is no list of check boxes to tick&amp;hellip; just some guidelines. Part of these lessons have been learned in the hard way, part because i have been always taught that if you want to be the best, you have to copy the best. There is plenty of literature on Internet about this&amp;hellip; read, understand and copy.
I think the art of building high-traffic websites is part about the code, but mostly about your web architecture and the tools you use.</description>
    </item>
    
    <item>
      <title>Functional Programming ideas in OOP</title>
      <link>/blog/functional-programming-ideas-in-oop/</link>
      <pubDate>Sun, 27 Mar 2011 13:29:33 +0000</pubDate>
      
      <guid>/blog/functional-programming-ideas-in-oop/</guid>
      <description>About a year and half ago I started to be interested in Scala. Scala is a hybrid between an Object Oriented language and a Functional Language, and while i was using it i learnt to appreciate more and more the Functional part. I will not hide that the most difficult part in learning Scala was because of that.
The mindset when solving problems using FP is different because it forces you to think in terms of mapping transformations rather than step-by-step algorithms.</description>
    </item>
    
    <item>
      <title>CDN Optimizations</title>
      <link>/blog/cdn-optimizations/</link>
      <pubDate>Sun, 17 Oct 2010 13:55:49 +0000</pubDate>
      
      <guid>/blog/cdn-optimizations/</guid>
      <description>One of our most trafficked website is on average sustaining 300000 page views per day. Each page has normally a considerable amount of JavaScript, some of it activated only after the whole DOM has been loaded.
Considering that every page has on average 20-30 images coming from our image server, every small optimization to it has an avalanche effect on all the other parts of the system.
I already described the infrastructure in the Nginx post.</description>
    </item>
    
    <item>
      <title>Dbunit testing</title>
      <link>/blog/dbunit-testing/</link>
      <pubDate>Sun, 17 Oct 2010 13:09:26 +0000</pubDate>
      
      <guid>/blog/dbunit-testing/</guid>
      <description>This article is about PHPUnit used in conjunction with DBUnit to test PHP code that interacts with a database server.
Please note that DBUnit is able to load and unload sets of data to the db but does not handle table creation and queries that alter structures. This is responsibility of an ORM or an initial sql script that creates/rebases the initial environment.
Code i wrote is run against a very simple ORM implementation we currently use in my workplace.</description>
    </item>
    
    <item>
      <title>Limonade</title>
      <link>/blog/limonade/</link>
      <pubDate>Mon, 11 Oct 2010 00:56:07 +0000</pubDate>
      
      <guid>/blog/limonade/</guid>
      <description>The idea of microframeworks is an interesting new idea which appeared over the internet quite recently. The number of web frameworks available on internet is massive and many times i found myself puzzled about which one is the best one to use. Of course there are the ones i believe are the &amp;ldquo;classics&amp;rdquo; (django and ruby on rails) plus many minor ones. The first famous microframework was Sinatra, followed now by others.</description>
    </item>
    
    <item>
      <title>Making complex software not complicated</title>
      <link>/blog/making-complex-software-not-complicated/</link>
      <pubDate>Tue, 05 Oct 2010 20:32:05 +0000</pubDate>
      
      <guid>/blog/making-complex-software-not-complicated/</guid>
      <description>I&amp;rsquo;d like to share my thoughts with you about approaching difficult problems in software development. This is pretty much what i came to realize after many years of development.
A difficult problem is usually divisible in several simple problems, but when developing software you stack up problems and every problem relies on the solution of the sub-problem.
Example (a common order visualizer)
 1st level of the stack: 1) display_order_in_xml() (relies on read_order()) 1) display_order_in_json() (relies on read_order()) 2nd: 2) read_order() (relies on read_orderitems() and an internal calculate_delivery()) 3rd: 3) read_orderitems() (relies on items_mapper::find() OR read_items_from_external_shop()) 4th - case 1 - items_mapper 4) items_mapper::find() (relies on a db_Adapter) 5) db_Adapter (no dependencies) 4th - case 2 - read_items_from_external_shop() 4) read_items_from_external_shop() (relies on json_call()) 5) json_call() (depends on http class for sending requests) 6) http class (no dependencies)  Solution here is to isolate each bit, and being able to feed a fixed solution of the sub-problem to the current problem.</description>
    </item>
    
    <item>
      <title>Scala</title>
      <link>/blog/scala/</link>
      <pubDate>Tue, 05 Oct 2010 20:01:04 +0000</pubDate>
      
      <guid>/blog/scala/</guid>
      <description>This had quickly become one of my favourite languages. If you see it from the point of view of expressiveness, it is really close to Python. It is quite new in the world of programming languages, but it is mature enough to be used by big players such as Twitter and Foursquare.
What i like of that language is mainly conciseness united with the possibility of using almost every tool and library from the Java world.</description>
    </item>
    
    <item>
      <title>Nginx rocks</title>
      <link>/blog/nginx-rocks/</link>
      <pubDate>Sun, 03 Oct 2010 16:09:47 +0000</pubDate>
      
      <guid>/blog/nginx-rocks/</guid>
      <description>I have installed Nginx some time ago on one of our busiest servers on our partner&amp;rsquo;s networks, i promised i would have blogged about this and now it&amp;rsquo;s about time. This server only serves images of products sold thorugh our e-commerce site. The first configuration was only a simple web server which was serving already resized images directly, due to the massive amount of images and the cleaning of it which was taking days, i decided to use Nginx in reverse proxy mode.</description>
    </item>
    
    <item>
      <title>Tag-based routing in laconi.ca</title>
      <link>/blog/tag-based-routing-in-laconica/</link>
      <pubDate>Thu, 02 Apr 2009 23:15:09 +0000</pubDate>
      
      <guid>/blog/tag-based-routing-in-laconica/</guid>
      <description>Following the last article, i have been experimenting again on laconica and pubsub, this time on the idea of &amp;ldquo;filtering the real time web&amp;rdquo;.
Stomp and generally JMS messages offer the ability to specify headers and body of the message to transmit, in a way that resembles http requests. In fact, Stomp protocol is really similar to Http protocol, at least in the general structure. The difference is that there are different methods instead of GET, POST, etc.</description>
    </item>
    
    <item>
      <title>About the use of queues and pubsub in Laconi.ca</title>
      <link>/blog/about-the-use-of-queues-and-pubsub-in-laconica/</link>
      <pubDate>Sun, 15 Mar 2009 19:57:51 +0000</pubDate>
      
      <guid>/blog/about-the-use-of-queues-and-pubsub-in-laconica/</guid>
      <description>Lately i have been working on the idea of queues and pubsub mechanisms and how it is possible to integrate them in a microblogging service. I am fascinated by messaging protocols and event pushing!
Let me say that XMPP is in my opinion the protocol of the future, however its pubsub implementation is quite complex if compared to what STOMP offers, and I didn&amp;rsquo;t find any mature PHP library.</description>
    </item>
    
    <item>
      <title>Why this blog?</title>
      <link>/blog/why-this-blog/</link>
      <pubDate>Sun, 15 Mar 2009 18:39:48 +0000</pubDate>
      
      <guid>/blog/why-this-blog/</guid>
      <description>Humans need interaction. Web 2.0 has been, and still is, all about human interaction. Wikis, blogs, microblogs are all a wonderful way to organize information but, more important, are methods to empower the interaction with the other internet users. The web however is still far from &amp;ldquo;human&amp;rdquo; interactions&amp;hellip; why we have to go to Facebook to see if there&amp;rsquo;s new content from friends?? Why the web can&amp;rsquo;t just say to me.</description>
    </item>
    
  </channel>
</rss>